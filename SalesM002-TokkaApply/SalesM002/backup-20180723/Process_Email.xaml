<Activity mc:Ignorable="sap sap2010 sads" x:Class="Process_email"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Body" Type="InArgument(x:String)" />
    <x:Property Name="attachedFiles" Type="InArgument(snm:AttachmentCollection)" />
    <x:Property Name="subject" Type="InArgument(x:String)" />
    <x:Property Name="mailMessage" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="mail_account" Type="InArgument(x:String)" />
    <x:Property Name="mail_account_pwd" Type="InArgument(x:String)" />
    <x:Property Name="Work_Mode" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Process_email_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Windows.Shapes</x:String>
      <x:String>System.Windows.Controls</x:String>
      <x:String>System.Windows.Documents</x:String>
      <x:String>System.Windows.Shell</x:String>
      <x:String>System.Windows.Navigation</x:String>
      <x:String>System.Windows.Data</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Windows.Controls.Primitives</x:String>
      <x:String>System.Windows.Media.Animation</x:String>
      <x:String>System.Windows.Input</x:String>
      <x:String>System.Windows.Media</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Windows.Automation</x:String>
      <x:String>System.Windows.Media.TextFormatting</x:String>
      <x:String>System.Windows.Ink</x:String>
      <x:String>System.Windows.Media.Effects</x:String>
      <x:String>System.Windows.Media.Imaging</x:String>
      <x:String>System.Windows.Media.Media3D</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities.Debugger.Symbol</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Caliburn.Micro</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Format</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Library</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Caliburn.Micro.Platform</AssemblyReference>
      <AssemblyReference>Caliburn.Micro</AssemblyReference>
      <AssemblyReference>Caliburn.Micro.Platform.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="errorMessage" />
      <Variable x:TypeArguments="x:String" Name="newReply" />
      <Variable x:TypeArguments="x:String" Default="&lt;BR&gt;&lt;BR&gt;此邮件由系统自动发送，请勿回复此邮件，如有问题请联系相关人员。&lt;BR&gt;This email is sent by system. Please DO NOT reply this email. If you have any questions, please contact with whom concerned.&lt;BR&gt;" Name="endingMail" />
      <Variable x:TypeArguments="x:String" Name="tmpSavePath" />
      <Variable x:TypeArguments="x:String" Default="Sheet1" Name="Const_Sheet_Name" />
      <Variable x:TypeArguments="x:String" Default="【2018年第2版】" Name="Const_VER_NO" />
      <Variable x:TypeArguments="x:String" Name="strVerNo" />
      <Variable x:TypeArguments="x:String" Name="strDealerName" />
      <Variable x:TypeArguments="x:Object" Name="strApplyDate" />
      <Variable x:TypeArguments="x:String" Name="strSAPNo" />
      <Variable x:TypeArguments="x:String" Name="strDealerApplyNo" />
      <Variable x:TypeArguments="x:String" Name="strEndUserName" />
      <Variable x:TypeArguments="x:String" Name="strApplyEndDate" />
      <Variable x:TypeArguments="x:String" Name="strApplyReason" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtNewData" />
      <Variable x:TypeArguments="sd:DataRow" Name="drRow" />
      <Variable x:TypeArguments="x:String" Name="tmpDatetime" />
      <Variable x:TypeArguments="x:String" Default="D:\temp\WFCSV\import\SalesM002" Name="Const_CSV_PATH" />
      <Variable x:TypeArguments="x:String" Default="D:\temp\Work\SalesM002\" Name="Const_Work_PATH" />
      <Variable x:TypeArguments="x:String" Name="strSubjectTemp" />
      <Variable x:TypeArguments="x:String" Name="strFromTemp" />
      <Variable x:TypeArguments="x:String" Name="strCCTemp" />
      <Variable x:TypeArguments="x:String" Name="strBodyTemp" />
      <Variable x:TypeArguments="x:String" Name="strMailFileName" />
      <Variable x:TypeArguments="x:Int32" Name="intCounter" />
    </Sequence.Variables>
    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Process email.&#xA;The Body of the email is passed as an argument&#xA;" />
    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;[&quot; &amp; subject &amp; &quot;]'s mail process started.&quot;]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Work_Mode = true]" sap2010:WorkflowViewState.IdRef="If_60">
      <If.Then>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Const_CSV_PATH]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">\\192.168.19.18\temp\WFCSV\import\SalesM002</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_80">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Const_CSV_PATH]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">D:\temp\WFCSV\import\SalesM002</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <Sequence DisplayName="Attached files check logic" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <If Condition="[attachedFiles is nothing or attachedFiles.Count=0]" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Then>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="No attached file." />
            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">--邮件中没有附件，请添加规定XLSX格式的Excel附件。&lt;BR&gt;</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_67">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[newReply]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["您好！&lt;BR&gt;&lt;BR&gt;" + "您的特价申请我们已经收到，但是发现内容有以下问题，请确认和修改以后重新申请，谢谢！&lt;BR&gt;&lt;BR&gt;" &amp; errorMessage &amp; "&lt;BR&gt;安川电机中国&lt;BR&gt;"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[newReply+&quot;&lt;BR&gt;------------------------------------------------------------------&lt;BR&gt;&quot;+&quot;发件人: &quot;+ mailMessage.From.Address+&quot;&lt;BR&gt;&quot;+&quot;发送时间: &quot;+mailMessage.Headers.Get(&quot;date&quot;)+&quot;&lt;BR&gt;&quot;+&quot;收件人: &quot;+string.Join(&quot;,&quot;,mailMessage.To) +&quot;&lt;BR&gt;&quot;+&quot;抄送: &quot;+string.Join(&quot;,&quot;,mailMessage.CC)+&quot;&lt;BR&gt;&quot;+&quot;主题: &quot;+mailMessage.Subject+ &quot;&lt;BR&gt;&quot;+ mailMessage.Body+ &quot;&lt;BR&gt;&quot;]" Cc="[string.Join(&quot;;&quot;,mailMessage.CC)]" DisplayName="Send SMTP Mail Message" Email="[mail_account]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_6" IsBodyHtml="True" Password="[mail_account_pwd]" Port="25" SecureConnection="Auto" Server="smtp.mxhichina.com" Subject="[&quot;自动回复：&quot; &amp; mailMessage.Subject]" To="[mailMessage.From.Address]">
              <ui:SendMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendMail.Files>
            </ui:SendMail>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;attached file name=&quot; &amp; attachedFiles(0).Name]" />
            <If Condition="[right(attachedFiles(0).name,4).ToUpper&lt;&gt;&quot;XLSX&quot;]" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="Attached file is not xlsx format." />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件格式有误，请添加规定XLSX格式的Excel附件。&lt;BR&gt;"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_68">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[newReply]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["您好！&lt;BR&gt;&lt;BR&gt;" + "您的特价申请我们已经收到，但是发现内容有以下问题，请确认和修改以后重新申请，谢谢！&lt;BR&gt;&lt;BR&gt;" &amp; errorMessage &amp; "&lt;BR&gt;安川电机中国&lt;BR&gt;"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[newReply+&quot;&lt;BR&gt;------------------------------------------------------------------&lt;BR&gt;&quot;+&quot;发件人: &quot;+ mailMessage.From.Address+&quot;&lt;BR&gt;&quot;+&quot;发送时间: &quot;+mailMessage.Headers.Get(&quot;date&quot;)+&quot;&lt;BR&gt;&quot;+&quot;收件人: &quot;+string.Join(&quot;,&quot;,mailMessage.To) +&quot;&lt;BR&gt;&quot;+&quot;抄送: &quot;+string.Join(&quot;,&quot;,mailMessage.CC)+&quot;&lt;BR&gt;&quot;+&quot;主题: &quot;+mailMessage.Subject+ &quot;&lt;BR&gt;&quot;+ mailMessage.Body+ &quot;&lt;BR&gt;&quot;]" Cc="[string.Join(&quot;;&quot;,mailMessage.CC)]" DisplayName="Send SMTP Mail Message" Email="[mail_account]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_7" IsBodyHtml="True" Password="[mail_account_pwd]" Port="25" SecureConnection="Auto" Server="smtp.mxhichina.com" Subject="[&quot;自动回复：&quot; &amp; mailMessage.Subject]" To="[mailMessage.From.Address]">
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendMail.Files>
                  </ui:SendMail>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="ui:WorkbookApplication" Name="tmpWorkbook" />
                    <Variable x:TypeArguments="x:String" Name="strCaseName" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_95">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[tmpDatetime]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[now.ToString("yyyyMMddHHmmss")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_60" Text="[&quot;now=&quot; &amp; tmpDatetime]" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[tmpSavePath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Const_Work_PATH &amp; tmpDatetime]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" FolderPath="[tmpSavePath]" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[mailMessage]" />
                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_43" Text="[&quot;=====&quot; + tmpSavePath &amp; &quot;\&quot; &amp; attachedFiles(0).Name]" />
                  <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" Visible="False" Workbook="[tmpWorkbook]" WorkbookPath="[tmpSavePath &amp; &quot;\&quot; &amp; attachedFiles(0).Name]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                          <TryCatch.Try>
                            <Sequence DisplayName="Read Excel Data" sap2010:WorkflowViewState.IdRef="Sequence_42">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="dtDetailData" />
                                <Variable x:TypeArguments="x:String" Name="strCustomerType" />
                                <Variable x:TypeArguments="x:String" Name="strUserBackground" />
                                <Variable x:TypeArguments="x:String" Name="strRivals" />
                                <Variable x:TypeArguments="x:String" Name="strRivalPrice" />
                                <Variable x:TypeArguments="x:String" Name="strServoList" />
                                <Variable x:TypeArguments="x:String" Name="strNeedCount" />
                                <Variable x:TypeArguments="x:String" Name="strAfterContract" />
                                <Variable x:TypeArguments="x:String" Name="strMassProductionDate" />
                                <Variable x:TypeArguments="x:String" Name="strDealerGP" />
                              </Sequence.Variables>
                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="[&quot;filepath=&quot; &amp; tmpSavePath &amp; &quot;\&quot; &amp; attachedFiles(0).Name]" />
                              <ui:ExcelReadCell Cell="B4" DisplayName="Read Cell-Ver.No." sap2010:WorkflowViewState.IdRef="ExcelReadCell_21" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strVerno]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_58" Text="[&quot;strVerno=&quot; &amp; strVerno]" />
                              <ui:ExcelReadCell Cell="C6" DisplayName="Read Cell-代理店名称" sap2010:WorkflowViewState.IdRef="ExcelReadCell_12" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strDealerName]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                <TryCatch.Try>
                                  <ui:ExcelReadCell Cell="C10" DisplayName="Read Cell-申请日期" sap2010:WorkflowViewState.IdRef="ExcelReadCell_13" SheetName="[Const_Sheet_Name]">
                                    <ui:ExcelReadCell.Result>
                                      <OutArgument x:TypeArguments="x:Object">[strApplyDate]</OutArgument>
                                    </ui:ExcelReadCell.Result>
                                  </ui:ExcelReadCell>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_59" Text="[exception.Message]" />
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                              <ui:ExcelReadCell Cell="C7" DisplayName="Read Cell-Dealer申请号" sap2010:WorkflowViewState.IdRef="ExcelReadCell_15" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strDealerApplyNo]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C8" DisplayName="Read Cell-最终用户名称" sap2010:WorkflowViewState.IdRef="ExcelReadCell_16" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strEndUserName]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C9" DisplayName="Read Cell-Case Name" sap2010:WorkflowViewState.IdRef="ExcelReadCell_17" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strCaseName]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C11" DisplayName="Read Cell-customer type" sap2010:WorkflowViewState.IdRef="ExcelReadCell_22" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strCustomerType]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C12" DisplayName="Read Cell-理由" sap2010:WorkflowViewState.IdRef="ExcelReadCell_19" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strApplyReason]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C16" DisplayName="Read Cell-客户背景" sap2010:WorkflowViewState.IdRef="ExcelReadCell_23" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strUserBackground]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C18" DisplayName="Read Cell-竞争对手" sap2010:WorkflowViewState.IdRef="ExcelReadCell_24" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strRivals]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C20" DisplayName="Read Cell-竞争价格" sap2010:WorkflowViewState.IdRef="ExcelReadCell_26" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strRivalPrice]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C22" DisplayName="Read Cell-装置的伺服构成" sap2010:WorkflowViewState.IdRef="ExcelReadCell_27" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strServoList]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C24" DisplayName="Read Cell-需要装置台数" sap2010:WorkflowViewState.IdRef="ExcelReadCell_28" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strNeedCount]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C26" DisplayName="Read Cell-签约后的营业额" sap2010:WorkflowViewState.IdRef="ExcelReadCell_29" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strAfterContract]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C28" DisplayName="Read Cell-量产日期" sap2010:WorkflowViewState.IdRef="ExcelReadCell_30" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strMassProductionDate]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadCell Cell="C30" DisplayName="Read Cell-代理店毛利率" sap2010:WorkflowViewState.IdRef="ExcelReadCell_31" SheetName="[Const_Sheet_Name]">
                                <ui:ExcelReadCell.Result>
                                  <OutArgument x:TypeArguments="x:String">[strDealerGP]</OutArgument>
                                </ui:ExcelReadCell.Result>
                              </ui:ExcelReadCell>
                              <ui:ExcelReadRange AddHeaders="False" DataTable="[dtDetailData]" DisplayName="Read Range(read detail data)" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="B35:K200" SheetName="[Const_Sheet_Name]" />
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strMailFileName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Const_WORK_PATH &amp; "mail\" &amp; tmpDatetime  &amp; strDealerApplyNo &amp; ".xlsx"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="[&quot;mailfilename=&quot; &amp; strMailFileName]" />
                              <Sequence DisplayName="CHECK Logic" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="strTempDate" />
                                  <Variable x:TypeArguments="s:DateTime" Name="dateTemp" />
                                  <Variable x:TypeArguments="x:Int32" Name="intResult" />
                                </Sequence.Variables>
                                <If Condition="[strVerNo.Contains(Const_VER_NO)=false]" DisplayName="If(Version check)" sap2010:WorkflowViewState.IdRef="If_28">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[版本]不是最新的，请添加最新的格式文件。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="[&quot;strVerNo=&quot; &amp; strVerNo]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strDealerName=&quot;&quot; or strDealerName is nothing]" DisplayName="If(Dealer name)" sap2010:WorkflowViewState.IdRef="If_29">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[代理店名称]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_27" Text="[&quot;strDealerName=&quot; &amp; strDealerName]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strDealerApplyNo =&quot;&quot; or strDealerApplyNo is nothing]" DisplayName="If(申请书编号)" sap2010:WorkflowViewState.IdRef="If_61">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_81">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[申请书编号]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_44" Text="[&quot;strDealerApplyNo=&quot; &amp; strDealerApplyNo]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strEndUserName =&quot;&quot; or strEndUserName is nothing]" DisplayName="If(客户名称)" sap2010:WorkflowViewState.IdRef="If_62">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_82">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[客户名称]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_45" Text="[&quot;strEndUserName=&quot; &amp; strEndUserName]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strCaseName =&quot;&quot; or strCaseName is nothing]" DisplayName="If(项目名称)" sap2010:WorkflowViewState.IdRef="If_63">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_83">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[项目名称]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_46" Text="[&quot;strCaseName=&quot; &amp; strCaseName]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strapplydate.ToString=&quot;&quot; or strapplydate is nothing]" DisplayName="If(申请日期)" sap2010:WorkflowViewState.IdRef="If_30">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[申请时间]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_28" Text="[&quot;strapplydate=&quot; &amp; strapplydate.ToString]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strCustomerType=&quot;&quot; or strCustomerType is nothing]" DisplayName="If(客户类型)" sap2010:WorkflowViewState.IdRef="If_31">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[客户类型]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_29" Text="[&quot;strCustomerType=&quot; &amp; strCustomerType]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strApplyReason=&quot;&quot; or strApplyReason is nothing]" DisplayName="If(申请理由)" sap2010:WorkflowViewState.IdRef="If_32">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[申请理由]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_30" Text="[&quot;strApplyReason=&quot; &amp; strApplyReason]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strUserBackground=&quot;&quot; or strUserBackground is nothing]" DisplayName="If(客户背景)" sap2010:WorkflowViewState.IdRef="If_33">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_50">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[客户背景]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_31" Text="[&quot;strUserBackground=&quot; &amp; strUserBackground]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strRivals=&quot;&quot; or strRivals is nothing]" DisplayName="If(竞争对手)" sap2010:WorkflowViewState.IdRef="If_35">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[竞争对手]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_32" Text="[&quot;strRivals=&quot; &amp; strRivals]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strRivalPrice=&quot;&quot; or strRivalPrice is nothing]" DisplayName="If(竞争价格)" sap2010:WorkflowViewState.IdRef="If_64">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_84">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[竞争价格]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_33" Text="[&quot;strRivalPrice=&quot; &amp; strRivalPrice]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strServoList=&quot;&quot; or strServoList is nothing]" DisplayName="If(装置的伺服构成)" sap2010:WorkflowViewState.IdRef="If_65">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_85">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[装置的伺服构成]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_47" Text="[&quot;strServoList=&quot; &amp; strServoList]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strNeedCount=&quot;&quot; or strNeedCount is nothing]" DisplayName="If(需要装置台数)" sap2010:WorkflowViewState.IdRef="If_66">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_86">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[需要装置台数]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_48" Text="[&quot;strNeedCount=&quot; &amp; strNeedCount]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strAfterContract=&quot;&quot; or strAfterContract is nothing]" DisplayName="If(签约后的营业额)" sap2010:WorkflowViewState.IdRef="If_67">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_87">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[签约后的营业额]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_49" Text="[&quot;strAfterContract=&quot; &amp; strAfterContract]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strMassProductionDate=&quot;&quot; or strMassProductionDate is nothing]" DisplayName="If(量产日期)" sap2010:WorkflowViewState.IdRef="If_68">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_88">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[量产日期]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_50" Text="[&quot;strMassProductionDate=&quot; &amp; strMassProductionDate]" />
                                  </If.Else>
                                </If>
                                <If Condition="[strDealerGP=&quot;&quot; or strDealerGP is nothing]" DisplayName="If(代理店毛利率)" sap2010:WorkflowViewState.IdRef="If_69">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件的[代理店毛利率]没有填写。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_51" Text="[&quot;strDealerGP=&quot; &amp; strDealerGP]" />
                                  </If.Else>
                                </If>
                              </Sequence>
                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="basic data check logic ended." />
                              <Sequence DisplayName="Detail Check" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[intCounter]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each(Check Logic)" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[dtDetailData.Rows]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                        <If Condition="[item(0).ToString.Trim=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_40">
                                          <If.Then>
                                            <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                                          </If.Then>
                                          <If.Else>
                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[item(0).ToString]" />
                                          </If.Else>
                                        </If>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_94">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[intCounter]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[intCounter+1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Sequence DisplayName="Detail Check" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                          <If Condition="[item(1).ToString=&quot;&quot; or item(1) is nothing]" DisplayName="If(型号)" sap2010:WorkflowViewState.IdRef="If_70">
                                            <If.Then>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件明细的[序号]=" &amp; item(0).toString() &amp; "的[型号]没有填写。&lt;BR&gt;"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_52" Text="[&quot;lineno=&quot; &amp; item(0).ToString &amp; &quot;型号=&quot; &amp; item(1).ToString]" />
                                            </If.Else>
                                          </If>
                                          <If Condition="[item(2).ToString=&quot;&quot; or item(2) is nothing]" DisplayName="If(单台机械基本配置)" sap2010:WorkflowViewState.IdRef="If_71">
                                            <If.Then>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件明细的[序号]=" &amp; item(0).toString() &amp; "的[单台机械基本配置]没有填写。&lt;BR&gt;"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_54" Text="[&quot;lineno=&quot; &amp; item(0).ToString &amp; &quot;单台机械基本配置=&quot; &amp; item(2).ToString]" />
                                            </If.Else>
                                          </If>
                                          <If Condition="[item(3).ToString=&quot;&quot; or item(3) is nothing]" DisplayName="If(计划用量(台))" sap2010:WorkflowViewState.IdRef="If_72">
                                            <If.Then>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件明细的[序号]=" &amp; item(0).toString() &amp; "的[计划用量(台)]没有填写。&lt;BR&gt;"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_55" Text="[&quot;lineno=&quot; &amp; item(0).ToString &amp; &quot;计划用量(台)=&quot; &amp; item(3).ToString]" />
                                            </If.Else>
                                          </If>
                                          <If Condition="[item(6).ToString=&quot;&quot; or item(6) is nothing]" DisplayName="If(特价要求单价(元))" sap2010:WorkflowViewState.IdRef="If_73">
                                            <If.Then>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件明细的[序号]=" &amp; item(0).toString() &amp; "的[特价要求单价(元)]没有填写。&lt;BR&gt;"]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_56" Text="[&quot;lineno=&quot; &amp; item(0).ToString &amp; &quot;计划用量(台)=&quot; &amp; item(6).ToString]" />
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                                <If Condition="[intCounter=0]" sap2010:WorkflowViewState.IdRef="If_47">
                                  <If.Then>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_65">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[errorMessage]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[errorMessage &amp; "-邮件附件明细的数据需要一行以上。&lt;BR&gt;"]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                                <If Condition="[errorMessage=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_49">
                                  <If.Then>
                                    <Sequence DisplayName="Data Process" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="Data process started." />
                                      <ui:ForEach x:TypeArguments="sd:DataRow" DisplayName="For each(add data to csv file)" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[dtDetailData.Rows]">
                                        <ui:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="item" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="strCancel" />
                                              </Sequence.Variables>
                                              <If Condition="[item(0).ToString.Trim=&quot;&quot;]" sap2010:WorkflowViewState.IdRef="If_48">
                                                <If.Then>
                                                  <ui:Break sap2010:WorkflowViewState.IdRef="Break_4" />
                                                </If.Then>
                                                <If.Else>
                                                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[item(0).ToString]" />
                                                </If.Else>
                                              </If>
                                              <ui:AppendLine DisplayName="Append line" Encoding="GBK" FileName="[Const_CSV_PATH &amp; &quot;\data.csv&quot;]" sap2010:WorkflowViewState.IdRef="AppendLine_3" Text="[chr(34)+strDealerName+chr(34) + &quot;,&quot;  + chr(34)+strDealerApplyNo+chr(34) + &quot;,&quot; + &#xA;chr(34)+tmpDatetime+chr(34)+ &quot;,&quot; +&#xA;chr(34)+strEndUserName+chr(34) + &quot;,&quot; +&#xA;chr(34)+strCaseName+chr(34) + &quot;,&quot; +&#xA;chr(34)+strCustomerType+chr(34) + &quot;,&quot; +&#xA;chr(34)+strApplyReason+chr(34) + &quot;,&quot; +&#xA;chr(34)+strUserBackground+chr(34) + &quot;,&quot; +&#xA;chr(34)+strRivals+chr(34) + &quot;,&quot; +&#xA;chr(34)+strRivalPrice+chr(34) + &quot;,&quot; +&#xA;chr(34)+strServoList+chr(34) + &quot;,&quot; +&#xA;chr(34)+strNeedCount+chr(34) + &quot;,&quot; +&#xA;chr(34)+strAfterContract+chr(34) + &quot;,&quot; +&#xA;chr(34)+strMassProductionDate+chr(34) + &quot;,&quot; +&#xA;chr(34)+strDealerGP+chr(34) + &quot;,&quot; +&#xA;chr(34)+strMailFileName +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(1).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(2).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(3).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(4).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(5).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(6).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(8).ToString +chr(34) + &quot;,&quot; +&#xA;chr(34)+item(9).ToString +chr(34)]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEach.Body>
                                      </ui:ForEach>
                                      <Sequence DisplayName="file process" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                        <ui:CreateDirectory ContinueOnError="True" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[Const_CSV_PATH &amp; &quot;\files\&quot; &amp; strDealerApplyNo &amp; tmpDatetime   &amp; &quot;\TMT1&quot;]" />
                                        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Const_CSV_PATH &amp; &quot;\files\&quot; &amp; strDealerApplyNo &amp; tmpDatetime  &amp; &quot;\TMT1\&quot; &amp; attachedFiles(0).Name]" DisplayName="Copy attached file to WF attached" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="False" Path="[tmpSavePath &amp; &quot;\&quot; &amp; attachedFiles(0).Name]" />
                                      </Sequence>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <Sequence DisplayName="create mail temporary file" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="ui:WorkbookApplication" Name="tmpWorkbook2" />
                                  </Sequence.Variables>
                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_8" Text="// Write mail context into temporary file." />
                                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="[&quot;create mail temporary file started.&quot; &amp; strMailFileName]" />
                                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" Visible="False" Workbook="[tmpWorkbook2]" WorkbookPath="[strMailFileName]">
                                    <ui:ExcelApplicationScope.Body>
                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell(Subject)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Sheet1" Text="[mailMessage.Subject]" />
                                          <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell(From)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Sheet1" Text="[mailMessage.From.Address]" />
                                          <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell(CC)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Sheet1" Text="[string.Join(&quot;;&quot;,mailMessage.CC)]" />
                                          <ui:ExcelWriteCell Cell="D1" DisplayName="Write Cell(Body)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet1" Text="[&quot;&lt;BR&gt;------------------------------------------------------------------&lt;BR&gt;&quot;+&quot;发件人: &quot;+ mailMessage.From.Address+&quot;&lt;BR&gt;&quot;+&quot;发送时间: &quot;+mailMessage.Headers.Get(&quot;date&quot;)+&quot;&lt;BR&gt;&quot;+&quot;收件人: &quot;+string.Join(&quot;,&quot;,mailMessage.To) +&quot;&lt;BR&gt;&quot;+&quot;抄送: &quot;+string.Join(&quot;,&quot;,mailMessage.CC)+&quot;&lt;BR&gt;&quot;+&quot;主题: &quot;+mailMessage.Subject+ &quot;&lt;BR&gt;&quot;+ mailMessage.Body+ &quot;&lt;BR&gt;&quot;]" />
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ExcelApplicationScope.Body>
                                  </ui:ExcelApplicationScope>
                                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[tmpWorkbook2]" />
                                </Sequence>
                                <If Condition="[errorMessage&lt;&gt;&quot;&quot;]" DisplayName="If(send check error mail )" sap2010:WorkflowViewState.IdRef="If_50">
                                  <If.Then>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_42" Text="Send error mail startd." />
                                      <Sequence DisplayName="Send error mail" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[newReply]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["您好！&lt;BR&gt;&lt;BR&gt;" + "您的特价申请[申请书编号：" &amp; strDealerApplyNo &amp; "]我们已经收到，但是发现内容有以下问题，请确认和修改以后重新申请，谢谢！&lt;BR&gt;&lt;BR&gt;" &amp; errorMessage &amp; "&lt;BR&gt;安川电机中国&lt;BR&gt;"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadMailContents workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ReadMailContents.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="strSubjectTemp">[strSubjectTemp]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="strFromTemp">[strFromTemp]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="strCCTemp">[strCCTemp]</OutArgument>
                                            <OutArgument x:TypeArguments="x:String" x:Key="strBodyTemp">[strBodyTemp]</OutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="strFilePath" xml:space="preserve">[Const_WORK_PATH &amp; "\mail\" &amp; tmpDatetime  &amp; strDealerApplyNo &amp; ".xlsx"]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[newReply+ strBodyTemp]" Cc="[strCCTemp]" DisplayName="Send SMTP Mail Message" Email="[mail_account]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_5" IsBodyHtml="True" Password="[mail_account_pwd]" Port="25" SecureConnection="Auto" Server="smtp.mxhichina.com" Subject="[&quot;自动回复：&quot; &amp; strSubjectTemp]" To="[strFromTemp]">
                                          <ui:SendMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                          </ui:SendMail.Files>
                                        </ui:SendMail>
                                      </Sequence>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_49">
                                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="No error happened." />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_72">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[newReply]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["您好！&lt;BR&gt;&lt;BR&gt;" + "您的特价申请[申请书编号：" &amp; strDealerApplyNo &amp; "]我们已经收到，目前正在审批中，审批完成后会有邮件通知，谢谢！&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;安川电机中国&lt;BR&gt;"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ReadMailContents workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ReadMailContents.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <OutArgument x:TypeArguments="x:String" x:Key="strSubjectTemp">[strSubjectTemp]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="strFromTemp">[strFromTemp]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="strCCTemp">[strCCTemp]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="strBodyTemp">[strBodyTemp]</OutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="strFilePath">[Const_WORK_PATH &amp; "\mail\" &amp; tmpDatetime &amp; strDealerApplyNo &amp; ".xlsx"]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_40" Text="[&quot;strFromTemp=&quot; &amp; strFromTemp]" />
                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                        <TryCatch.Try>
                                          <ui:SendMail Bcc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[newReply +strBodyTemp]" Cc="[strCCTemp]" DisplayName="Send SMTP Mail Message" Email="[mail_account]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_9" IsBodyHtml="True" Password="[mail_account_pwd]" Port="25" SecureConnection="Auto" Server="smtp.mxhichina.com" Subject="[&quot;自动回复：&quot; &amp; strSubjectTemp]" To="[strFromTemp]">
                                            <ui:SendMail.Files>
                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                            </ui:SendMail.Files>
                                          </ui:SendMail>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_41" Text="[exception.Message &amp; exception.StackTrace]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_57" Text="[exception.Source &amp; exception.Message &amp; exception.StackTrace]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[tmpWorkbook]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;[&quot; &amp; subject &amp; &quot;]'s mail process ended.&quot;]" />
    <sads:DebugSymbol.Symbol>dzhEOlxSUEFcU2FsZXNNMDAyLVRva2thQXBwbHlcU2FsZXNNMDAyXFByb2Nlc3NfRW1haWwueGFtbLEDbAP/Bg4CAQFwNHD5AQIBBnI0cjwCAQVzNHNAAgEEfzR/VAIBA4ABNIABTQIBAogBBYgBkAEDAa0FiQEFiQGqAQMBqgWKAQWTAQ4DAaYFlAEFqQEKAwGbBaoBBfwGEAIBCv0GBf0GqQECAQeJAVyJAacBAwGrBZABC5ABOgMBqQWMATGMAT8DAacFlAETlAEnAwGcBZYBCZ0BEgMBogWgAQmnARIDAZ4FqwEH+wYMAgEL/QZd/QamAQIBCJsBNJsBXwMBpQWYATWYAUUDAaMFpQE0pQFSAwGhBaIBNaIBRQMBnwWrARWrAUoCAQytAQvEARYDAfoExwEL+QYWAgEPrgENrgF7AwGZBa8BDbYBFgMBlQW3AQ2+ARYDAZAFvwENwwEbAwH7BMgBDcgBpgEDAfcEyQEN+AYSAgEQrgFlrgF4AwGaBbQBOLQBYAMBmAWxATmxAUcDAZYFvAE4vAHLAQMBkwW5ATm5AUMDAZEFvwHiB78B/gcDAY4FvwGRBb8BvgUDAYwFvwF6vwGNBQMBhAW/Aa8HvwHeBwMBggW/AeoFvwH6BQMBgAW/Ae4GvwHyBgMB/wS/AZIHvwGmBwMB/gS/AdQGvwHoBgMB/ATIAWTIAaMBAwH4BMkBG8kBXQIBEcsBEeIBHAMB1QTlARH2BhwCARLMARPMAZEBAwH1BM0BE9QBHAMB8ATVARPcARwDAesE3QET4QEhAwHWBOoBE/EBHAMB0QTyARPyAZQBAwHOBPMBE/oBHAMByAT7ARP7Ac4BAwHDBPwBE/wBwQEDAb8E/QET9AYuAgEW9QYT9QaZAQIBE8wBa8wBjgEDAfYE0gE+0gF9AwHzBM8BP88BTQMB8QTaAT7aAdEBAwHuBNcBP9cBSQMB7ATdAegH3QGECAMB6QTdAZcF3QHEBQMB5wTdAYAB3QGTBQMB3wTdAbUH3QHkBwMB3QTdAfAF3QGABgMB2wTdAfQG3QH4BgMB2gTdAZgH3QGsBwMB2QTdAdoG3QHuBgMB1wTvAT7vAV4DAdQE7AE/7AFMAwHSBPIBa/IBkQEDAc8E+AE++AFhAwHLBPUBP/UBTAMByQT7AbwB+wHLAQMBxgT7AWz7AXsDAcQE/AFr/AG+AQMBwAT9AdAB/QHfAQMBvQT9Ae0B/QGsAgMBugSDAhnxBiQCARf1BocB9QaWAQIBFIUCHeUGKAIBHe0GIe0GwwECARiSAh+SAtUBAwG2BJMCH5cCMgMBsASYAh+YAqIBAwGtBJkCH50CMgMBpwSeAh+wAioDAZ0EsQIftQIyAwGXBLYCH7oCMgMBkQS7Ah+/AjIDAYsEwAIfxAIyAwGFBMUCH8kCMgMB/wPKAh/OAjIDAfkDzwIf0wIyAwHzA9QCH9gCMgMB7QPZAh/dAjIDAecD3gIf4gIyAwHhA+MCH+cCMgMB2wPoAh/sAjIDAdUD7QIf8QIyAwHPA/ICH/IC8AEDAckD8wIf+gIoAwHCA/sCH/sCrQEDAb8D/AIf8gQqAwH+AfMEH/MEmQEDAfwB9AQf5AYqAgEe7QZ57QbAAQIBGZICd5IC0gEDAbcEkwI2kwI6AwG1BJUCS5UCVQMBswSTApgBkwKsAQMBsQSYAneYAp8BAwGuBJkCNpkCOgMBrASbAkubAloDAaoEmQKWAZkCqgEDAagEoAIjpAI2AwGhBKwCJ6wClwEDAZ4EsQI2sQI6AwGcBLMCS7MCXQMBmgSxApoBsQKuAQMBmAS2Aja2AjoDAZYEuAJLuAJbAwGUBLYClwG2AqsBAwGSBLsCNrsCOgMBkAS9Aku9AlgDAY4EuwKaAbsCrgEDAYwEwAI2wAI7AwGKBMICS8ICXAMBiATAAp8BwAKzAQMBhgTFAjbFAjsDAYQExwJLxwJbAwGCBMUClAHFAqgBAwGABMoCNsoCOwMB/gPMAkvMAl4DAfwDygKWAcoCqgEDAfoDzwI2zwI7AwH4A9ECS9ECVgMB9gPPApYBzwKqAQMB9APUAjbUAjsDAfID1gJL1gJaAwHwA9QClgHUAqoBAwHuA9kCNtkCOwMB7APbAkvbAlkDAeoD2QKZAdkCrQEDAegD3gI23gI7AwHmA+ACS+ACWQMB5APeApgB3gKsAQMB4gPjAjbjAjsDAeAD5QJL5QJdAwHeA+MCmQHjAq0BAwHcA+gCNugCOwMB2gPqAkvqAmIDAdgD6AKWAegCqgEDAdYD7QI27QI7AwHUA+8CS+8CWAMB0gPtApgB7QKsAQMB0APyAk/yAl8DAc0D8gLEAfICzgEDAcwD8gLZAfIC7QEDAcoD9QJL9QJcAwHDA/sCd/sCqgEDAcADggMhkAMmAwGzA5EDIZ8DJgMBpwOgAyGuAyYDAZsDrwMhvQMmAwGPA74DIcwDJgMBgwPNAyHbAyYDAfcC3AMh6gMmAwHrAusDIfkDJgMB3wL6AyGIBCYDAdMCiQQhlwQmAwHHApgEIaYEJgMBuwKnBCG1BCYDAa8CtgQhxAQmAwGjAsUEIdMEJgMBlwLUBCHiBCYDAYsC4wQh8QQmAwH/AfMEd/MElgEDAf0B9QQh/AQqAwH4Af0EIdUFLgMBygHWBSHhBSYDAcIB4gUhgwYmAwGfAYQGIZoGLAIBeJsGIeMGJgIBH6ACOqACPwMBpgSiAk+iAl0DAaQEoAKaAaACrgEDAaIErAJ/rAKUAQMBnwSCAy+CA1gDAbQDhAMliwMuAwG6A44DJY4DqAEDAbcDkQMvkQNpAwGoA5MDJZoDLgMBrgOdAyWdA7IBAwGrA6ADL6ADcAMBnAOiAyWpAy4DAaIDrAMlrAO4AQMBnwOvAy+vA2wDAZADsQMluAMuAwGWA7sDJbsDtAEDAZMDvgMvvgNmAwGEA8ADJccDLgMBigPKAyXKA64BAwGHA80DL80DcAMB+ALPAyXWAy4DAf4C2QMl2QO5AQMB+wLcAy/cA20DAewC3gMl5QMuAwHyAugDJegDtgEDAe8C6wMv6wNrAwHgAu0DJfQDLgMB5gL3AyX3A7QBAwHjAvoDL/oDcQMB1AL8AyWDBC4DAdoChgQlhgS6AQMB1wKJBC+JBGEDAcgCiwQlkgQuAwHOApUEJZUEqgEDAcsCmAQvmARpAwG8ApoEJaEELgMBwgKkBCWkBLIBAwG/AqcEL6cEZwMBsAKpBCWwBC4DAbYCswQlswSwAQMBswK2BC+2BGcDAaQCuAQlvwQuAwGqAsIEJcIEsAEDAacCxQQvxQRvAwGYAscEJc4ELgMBngLRBCXRBLgBAwGbAtQEL9QEeQMBjALWBCXdBC4DAZIC4AQl4ATCAQMBjwLjBC/jBGUDAYAC5QQl7AQuAwGGAu8EJe8ErgEDAYMC+gRL+gRMAwH7AfcETPcEWAMB+QH9BKMB/QS4AQMB9wGDBSfSBTIDAcsB1gUv1gU/AwHDAdgFJd8FLgMBxQHiBS/iBUwDAaAB5AUlgQYwAwGiAYgGI4gGjwEDAZ4BiQYjiQbHAQMBmwGKBiOYBj4CAXyZBiOZBqoBAgF5mwYvmwZTAgEgnQYltwYwAgFQugYl4QYwAgEiiQNQiQOMAQMBvQOGA1GGA18DAbsDjgN9jgOlAQMBuAOYA1CYA4MBAwGxA5UDUZUDXwMBrwOdA32dA68BAwGsA6cDUKcDgwEDAaUDpANRpANfAwGjA6wDfawDtQEDAaADtgNQtgOCAQMBmQOzA1GzA18DAZcDuwN9uwOxAQMBlAPFA1DFA4IBAwGNA8IDUcIDXwMBiwPKA33KA6sBAwGIA9QDUNQDggEDAYED0QNR0QNfAwH/AtkDfdkDtgEDAfwC4wNQ4wOCAQMB9QLgA1HgA18DAfMC6AN96AOzAQMB8ALyA1DyA4IBAwHpAu8DUe8DXwMB5wL3A333A7EBAwHkAoEEUIEEggEDAd0C/gNR/gNfAwHbAoYEfYYEtwEDAdgCkARQkASCAQMB0QKNBFGNBF8DAc8ClQR9lQSnAQMBzAKfBFCfBIIBAwHFApwEUZwEXwMBwwKkBH2kBK8BAwHAAq4EUK4EhQEDAbkCqwRRqwRfAwG3ArMEfbMErQEDAbQCvQRQvQSEAQMBrQK6BFG6BF8DAasCwgR9wgStAQMBqALMBFDMBIUBAwGhAskEUckEXwMBnwLRBH3RBLUBAwGcAtsEUNsEggEDAZUC2ARR2ARfAwGTAuAEfeAEvwEDAZAC6gRQ6gSEAQMBiQLnBFHnBF8DAYcC7wR97wSrAQMBhAKEBSmLBS4DAfIBjAUpkwUyAwHtAZQFKdEFNAMBzAHdBVDdBYIBAwHIAdoFUdoFXwMBxgHlBSflBZkBAwHAAeYFJ/wFNAMBswH9BSeABjIDAaMBiQZ7iQbEAQMBnAGKBsoBigbaAQMBmQGKBugBigb7AQMBlwGQBimVBjQCAX2ZBpcBmQanAQIBep4GJ54GmwECAXafBie2BjICAVG7Bie7BpYBAgFOvAYnwwYwAgFJxAYnzAY/AgE7zQYnzQawAQIBOM4GJ+AGMgIBI4QFN4QFXQMB8wGGBS2GBWMDAfYBiQUtiQWcAQMB9AGRBVORBWEDAfABjgVUjgVgAwHuAZUFK6MFMAMB5QGkBSuyBTADAd0BswUrwQUwAwHVAcIFK9AFMAMBzQHlBX/lBZYBAwHBAeYFsgHmBccBAwG/AewFLfkFOAMBtAH+BSn+BZ4CAwGtAf8FKf8FnwMDAaQBkQYrkQbPAQMBkgGSBiuSBtIBAwGNAZMGK5MG4QEDAYgBlAYrlAbABQIBfp4Gf54GmAECAXegBimnBjICAXCoBimwBkECAWKxBim1BjcCAVK7Bn+7BpMBAgFPwQZSwQbsAQIBTL4GU74GXQIBSsgGZcgGcAIBR8YGasYGegIBRcoGZsoGvQECAUHJBmfJBnQCAT/HBmfHBnQCAT3EBt8BxAb2AQIBPM0Gf80GrQECATnQBivUBjkCASjcBi/cBroBAgEkiQWFAYkFmQEDAfUBlQU5lQVwAwHmAZcFL54FOAMB6QGhBS+hBeUBAwHnAaQFOaQFcAMB3gGmBS+tBTgDAeEBsAUvsAXrAQMB3wGzBTmzBXADAdYBtQUvvAU4AwHZAb8FL78F6gEDAdcBwgU5wgVwAwHOAcQFL8sFOAMB0QHOBS/OBeoBAwHPAfAFL/cFNAMBugH4BS/4Bc0LAwG1Af4FTf4FUwMBsgH+BawB/gWbAgMBrgH/BV3/BegBAwGoAf8F3QL/BZwDAwGlAZEGQ5EGRwMBlgGRBrUBkQbMAQMBlAGRBqcBkQavAQMBkwGSBkOSBkcDAZEBkgazAZIGzwEDAY8BkgalAZIGrQEDAY4BkwZDkwZHAwGMAZMGsQGTBt4BAwGKAZMGowGTBqsBAwGJAZQGQ5QGRwMBhwGUBrMBlAa9BQMBgAGUBqUBlAatAQIBf6UGVKUGjwICAXOiBlWiBl8CAXGsBmesBnICAW6qBmyqBnwCAWytBmmtBnYCAWarBmmrBnYCAWSoBuEBqAb4AQIBY7EG3wOxBu4DAgFgsQazAbEGwAECAV6xBpYBsQavAQIBW7EGsQOxBtsDAgFZsQbsAbEG/AECAVexBvACsQb0AgIBVrEGlAOxBqgDAgFVsQbWArEG6gICAVPQBuED0AbwAwIBNtAGtQHQBsIBAgE00AaYAdAGsQECATHQBrMD0AbdAwIBL9AG7gHQBv4BAgEt0AbyAtAG9gICASzQBpYD0AaqAwIBK9AG2ALQBuwCAgEp3AaHAdwGtwECASWcBVqcBbQBAwHsAZkFW5kFaQMB6gGhBYcBoQXiAQMB6AGrBVqrBboBAwHkAagFW6gFaQMB4gGwBYcBsAXoAQMB4AG6BVq6BbkBAwHcAbcFW7cFaQMB2gG/BYcBvwXnAQMB2AHJBVrJBbsBAwHUAcYFW8YFaQMB0gHOBYcBzgXnAQMB0AHwBT3wBWMDAbsB8gUz8gVpAwG+AfUFM/UFogEDAbwB+AVh+AVmAwG5AfgF0wH4BcoLAwG4AfgFcPgFngEDAbYB9QWLAfUFnwEDAb0B</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="1583,74" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="1583,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="1583,60" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="If_60" sap:VirtualizedContainerService.HintSize="1583,206" />
      <sap2010:ViewStateData Id="WriteLine_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendMail_6" sap:VirtualizedContainerService.HintSize="314,144" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="336,568">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_7" sap:VirtualizedContainerService.HintSize="1178,60" />
      <sap2010:ViewStateData Id="WriteLine_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendMail_7" sap:VirtualizedContainerService.HintSize="314,144" />
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="336,568">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_95" sap:VirtualizedContainerService.HintSize="795,60" />
      <sap2010:ViewStateData Id="WriteLine_60" sap:VirtualizedContainerService.HintSize="795,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="795,60" />
      <sap2010:ViewStateData Id="SaveMailAttachments_2" sap:VirtualizedContainerService.HintSize="795,87" />
      <sap2010:ViewStateData Id="WriteLine_43" sap:VirtualizedContainerService.HintSize="795,60" />
      <sap2010:ViewStateData Id="WriteLine_18" sap:VirtualizedContainerService.HintSize="741,60" />
      <sap2010:ViewStateData Id="ExcelReadCell_21" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="WriteLine_58" sap:VirtualizedContainerService.HintSize="741,60" />
      <sap2010:ViewStateData Id="ExcelReadCell_12" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_13" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WriteLine_59" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="404,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="741,282" />
      <sap2010:ViewStateData Id="ExcelReadCell_15" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_16" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_17" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_22" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_19" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_23" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_24" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_26" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_27" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_28" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_29" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_30" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_31" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="741,59" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="741,60" />
      <sap2010:ViewStateData Id="WriteLine_19" sap:VirtualizedContainerService.HintSize="741,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_26" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_27" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_44" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_61" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_45" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_62" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_46" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_63" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_28" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_30" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_29" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_30" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_31" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_33" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_32" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_35" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_84" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_33" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_64" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_85" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_47" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_65" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_86" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_48" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_66" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_87" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_49" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_67" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_50" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_68" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_51" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_69" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="741,4004">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_22" sap:VirtualizedContainerService.HintSize="741,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="719,60" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteLine_13" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_40" sap:VirtualizedContainerService.HintSize="500,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="500,60" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_52" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_70" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_54" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_71" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_55" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_72" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="WriteLine_56" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_73" sap:VirtualizedContainerService.HintSize="478,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="500,1064">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="522,1533">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="719,1665">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="If_47" sap:VirtualizedContainerService.HintSize="719,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_20" sap:VirtualizedContainerService.HintSize="502,60" />
      <sap2010:ViewStateData Id="Break_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="If_48" sap:VirtualizedContainerService.HintSize="464,205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AppendLine_3" sap:VirtualizedContainerService.HintSize="464,87" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="486,456">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="502,588">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyFile_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="502,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="524,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_49" sap:VirtualizedContainerService.HintSize="719,1205">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_8" sap:VirtualizedContainerService.HintSize="414,55" />
      <sap2010:ViewStateData Id="WriteLine_21" sap:VirtualizedContainerService.HintSize="414,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="336,592">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_4" sap:VirtualizedContainerService.HintSize="414,701">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_2" sap:VirtualizedContainerService.HintSize="414,59" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="719,1119">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_42" sap:VirtualizedContainerService.HintSize="336,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="SendMail_5" sap:VirtualizedContainerService.HintSize="314,50">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="336,401">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="358,625">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_72" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteLine_40" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendMail_9" sap:VirtualizedContainerService.HintSize="314,144">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_41" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="314,50">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="336,601">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_50" sap:VirtualizedContainerService.HintSize="719,770">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="741,5348">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="763,11922">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_57" sap:VirtualizedContainerService.HintSize="213,60" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="767,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="781,12144" />
      <sap2010:ViewStateData Id="ExcelApplicationScope_5" sap:VirtualizedContainerService.HintSize="795,12253">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_1" sap:VirtualizedContainerService.HintSize="795,59" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="817,13003">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1178,13149">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="1200,13373">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1561,13519">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="1583,13643">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="1583,60" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1605,14427">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Process_email_1" sap:VirtualizedContainerService.HintSize="1645,14627" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>